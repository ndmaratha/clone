1)package main

import (
    "fmt"
)

type Book struct {
    BookID int
    Author string
    Price  float64
}

func main() {
    var n int
    fmt.Println("Enter the number of books:")
    fmt.Scanln(&n)

    
    books := make([]Book, n)

    
    for i := 0; i < n; i++ {
        fmt.Printf("Enter details for book %d:\n", i+1)
        fmt.Print("Book ID: ")
        fmt.Scanln(&books[i].BookID)
        fmt.Print("Author: ")
        fmt.Scanln(&books[i].Author)
        fmt.Print("Price: ")
        fmt.Scanln(&books[i].Price)
    }

    
    fmt.Println("\nDetails of all the books:")
    for i, book := range books {
        fmt.Printf("Book %d:\n", i+1)
        fmt.Printf("  Book ID: %d\n", book.BookID)
        fmt.Printf("  Author: %s\n", book.Author)
        fmt.Printf("  Price: %.2f\n", book.Price)
    }
}

2)package main
import "fmt"

type shape interface{
    area() float64
    perimeter() float64
}

type rectangle struct {
    length,breadth float64
}

func( r rectangle) area() float64{
   
    return  r.length*r.breadth
}
func( r rectangle) perimeter() float64{
    perimeter:=2*(r.length+r.breadth)
    return perimeter
}

type circle struct {
    radius float64
}

func (c circle) area()float64{
    return 3.14*c.radius*c.radius 
}

func (c circle) perimeter()float64{
    return 2*3.14*c.radius
}

func main(){
    rec:=rectangle{
        length:2,
        breadth:2,
    }
    fmt.Println("Rectangle:")
    fmt.Println("The Area of rectangle is :",rec.area())
    fmt.Println("The perimeter of rectangle is:",rec.perimeter())
    
    
    cir:=circle{
    
        radius:1,
    }
    fmt.Println("Circle")
    fmt.Println("The area of circle is:",cir.area())
    fmt.Println("The perimeter of circle is:",cir.perimeter())
    
}





